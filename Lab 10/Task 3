public class Main  {
    public static void main(String[] args) {
        Living[] livingObjects = new Living[2];
        livingObjects[0] = new Duck();
        livingObjects[1] = new Penguin();

        for (Living living : livingObjects) {
            living.live();
        }
    }
}
interface Swimmable {
    void swim();
    void stopSwimming();
}

interface Flyable {
    void fly();
    void stopFlying();
}

interface Living {
    default void live() {
        System.out.println(this.getClass().getSimpleName() + " lives");
    }
}
class Submarine implements Swimmable {
    private boolean isSwimming = false;

  
    public void swim() {
        if (!isSwimming) {
            isSwimming = true;
            System.out.println("Submarine is swimming");
        } else {
            System.out.println("Submarine is already swimming");
        }
    }

   
    public void stopSwimming() {
        if (isSwimming) {
            isSwimming = false;
            System.out.println("Submarine stopped swimming");
        } else {
            System.out.println("Submarine is not swimming");
        }
    }
}

class Duck implements Swimmable, Flyable, Living {
    private boolean isSwimming = false;
    private boolean isFlying = false;

 
    public void swim() {
        if (!isSwimming) {
            isSwimming = true;
            System.out.println("Duck is swimming");
        } else {
            System.out.println("Duck is already swimming");
        }
    }

    
    public void stopSwimming() {
        if (isSwimming) {
            isSwimming = false;
            System.out.println("Duck stopped swimming");
        } else {
            System.out.println("Duck is not swimming");
        }
    }

    public void fly() {
        if (!isFlying) {
            isFlying = true;
            System.out.println("Duck is flying");
        } else {
            System.out.println("Duck is already flying");
        }
    }

   
    public void stopFlying() {
        if (isFlying) {
            isFlying = false;
            System.out.println("Duck stopped flying");
        } else {
            System.out.println("Duck is not flying");
        }
    }
}

class Penguin implements Swimmable, Living {
    private boolean isSwimming = false;


    public void swim() {
        if (!isSwimming) {
            isSwimming = true;
            System.out.println("Penguin is swimming");
        } else {
            System.out.println("Penguin is already swimming");
        }
    }

   
    public void stopSwimming() {
        if (isSwimming) {
            isSwimming = false;
            System.out.println("Penguin stopped swimming");
        } else {
            System.out.println("Penguin is not swimming");
        }
    }
}
